> library(PureCN)
Loading required package: DNAcopy
Loading required package: VariantAnnotation
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colMeans,
    colnames, colSums, dirname, do.call, duplicated, eval, evalq,
    Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply,
    lengths, Map, mapply, match, mget, order, paste, pmax, pmax.int,
    pmin, pmin.int, Position, rank, rbind, Reduce, rowMeans, rownames,
    rowSums, sapply, setdiff, sort, table, tapply, union, unique,
    unsplit, which, which.max, which.min

Loading required package: GenomeInfoDb
Loading required package: S4Vectors
Loading required package: stats4

Attaching package: ‘S4Vectors’

The following object is masked from ‘package:base’:

    expand.grid

Loading required package: IRanges
Loading required package: GenomicRanges
Loading required package: SummarizedExperiment
Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Loading required package: DelayedArray
Loading required package: matrixStats

Attaching package: ‘matrixStats’

The following objects are masked from ‘package:Biobase’:

    anyMissing, rowMedians

Loading required package: BiocParallel

Attaching package: ‘DelayedArray’

The following objects are masked from ‘package:matrixStats’:

    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRanges

The following objects are masked from ‘package:base’:

    aperm, apply

Loading required package: Rsamtools
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:DelayedArray’:

    type

The following object is masked from ‘package:base’:

    strsplit


Attaching package: ‘VariantAnnotation’

The following object is masked from ‘package:base’:

    tabulate

> library(genomation)
Loading required package: grid
> 
> annot.dir <- "../../../PREPROCESS/DNA/annotation"
> out.dir <- "../../../PREPROCESS/DNA/purecn"
> dir.create(out.dir, showWarnings = FALSE)
> bam.dir <- "../../../DATA/DNA"
> bam.files <- list.files(path = bam.dir, pattern = "01.bam")
> t.bam.files <- bam.files[grepl("CL", bam.files)]
> c.bam.files <- bam.files[grepl("T", bam.files)]
> n.bam.files <- bam.files[grepl("N", bam.files)]
> 
> ## ----preprocess:gc-------------------------------------------------------------
> 
> reference.file <- file.path(annot.dir, "GATK_bundle_b37",
+ 	                        "human_g1k_v37.fasta")
> 
> bed.file <- file.path(annot.dir,
+ 	                  "whole_exome_illumina_coding_v1.Homo_sapiens_assembly19.baits.interval_list_noheader")
> 
> # get mappability file: 
> mappability.file <- file.path(annot.dir,
+ 	                          "wgEncodeCrgMapabilityAlign36mer.bigWig")
> 
> if(!file.exists(mappability.file)){
+   download.file("ftp://hgdownload.cse.ucsc.edu/goldenPath/hg19/encodeDCC/wgEncodeMapability/wgEncodeCrgMapabilityAlign36mer.bigWig",
+ 	            destfile = mappability.file)
+ }
> 
> # convert to GRanges
> intervals <- readBed(bed.file)
Parsed with column specification:
cols(
  X1 = col_double(),
  X2 = col_double(),
  X3 = col_double(),
  X4 = col_character(),
  X5 = col_character()
)
> 
> # remove extraneous columns and make sure to keep strand info
> strand(intervals) <- mcols(intervals)$name
> intervals <- intervals[,-c(1,2)]
> 
> mappability <- import(mappability.file)
> 
> # file to save intervals
> interval.file <- file.path(out.dir, "intervals.txt")
> 
> # preprocess intervals
> if (!file.exists(interval.file)){
+   message("Creating file ", interval.file, "...")
+ 
+   preprocessIntervals(intervals, reference.file, 
+       mappability=mappability, 
+       output.file = interval.file)
+ 
+   message("File ", interval.file, " finished.")
+ }else{
+   message("File ", interval.file, " already created.")
+ }
File ../../../PREPROCESS/DNA/purecn/intervals.txt already created.
> 
> ## ----coverage-------------------------------------------------------
> 
> for (f in bam.files){
+   this.out <- file.path(out.dir, 
+  	                    paste0(gsub(".bam", "", f), "_coverage.txt"))	
+   if (!file.exists(this.out)){	
+     message("Creating file ", this.out, "...")
+ 
+     calculateBamCoverageByInterval(bam.file = file.path(bam.dir, f), 
+      interval.file = interval.file, 
+      output.file = this.out)
+ 
+     message("File ", this.out, " finished.")
+   }else{
+   	message("File ", this.out, " already created.")
+   }
+ }
Creating file ../../../PREPROCESS/DNA/purecn/DFCI-5367-CL-01_coverage.txt...
File ../../../PREPROCESS/DNA/purecn/DFCI-5367-CL-01_coverage.txt finished.
Creating file ../../../PREPROCESS/DNA/purecn/DFCI-5367-N-01_coverage.txt...
File ../../../PREPROCESS/DNA/purecn/DFCI-5367-N-01_coverage.txt finished.
Creating file ../../../PREPROCESS/DNA/purecn/DFCI-5367-T-01_coverage.txt...
File ../../../PREPROCESS/DNA/purecn/DFCI-5367-T-01_coverage.txt finished.
Creating file ../../../PREPROCESS/DNA/purecn/DFCI-5368-CL-01_coverage.txt...
File ../../../PREPROCESS/DNA/purecn/DFCI-5368-CL-01_coverage.txt finished.
Creating file ../../../PREPROCESS/DNA/purecn/DFCI-5368-N-01_coverage.txt...
File ../../../PREPROCESS/DNA/purecn/DFCI-5368-N-01_coverage.txt finished.
Creating file ../../../PREPROCESS/DNA/purecn/DFCI-5368-T-01_coverage.txt...
File ../../../PREPROCESS/DNA/purecn/DFCI-5368-T-01_coverage.txt finished.
Creating file ../../../PREPROCESS/DNA/purecn/DFCI-5369-CL-01_coverage.txt...
File ../../../PREPROCESS/DNA/purecn/DFCI-5369-CL-01_coverage.txt finished.
Creating file ../../../PREPROCESS/DNA/purecn/DFCI-5369-N-01_coverage.txt...
File ../../../PREPROCESS/DNA/purecn/DFCI-5369-N-01_coverage.txt finished.
Creating file ../../../PREPROCESS/DNA/purecn/DFCI-5369-T-01_coverage.txt...
File ../../../PREPROCESS/DNA/purecn/DFCI-5369-T-01_coverage.txt finished.
> 
> 
> 
> 
> 
> 
> 
> proc.time()
     user    system   elapsed 
16949.278   396.476 17679.498 
